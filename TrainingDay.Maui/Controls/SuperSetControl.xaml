<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:TrainingDay.Maui.Controls"
             xmlns:resx="clr-namespace:TrainingDay.Maui.Resources.Strings"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:data="clr-namespace:TrainingDay.Common.Models;assembly=TrainingDay.Common"
             xmlns:syncfusion="clr-namespace:Syncfusion.Maui.Toolkit.Picker;assembly=Syncfusion.Maui.Toolkit"
             x:Class="TrainingDay.Maui.Controls.SuperSetControl"
             x:Name="Self">
    <Grid RowDefinitions="auto,*" RowSpacing="5">

        <Grid MinimumHeightRequest="40">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ImageButton Source="arrow_right.png" Grid.Column="0" BackgroundColor="Transparent" Command="{Binding Source={x:Reference Self}, Path=PreviousCommand}"
                    WidthRequest="20" HeightRequest="20" VerticalOptions="Start" IsVisible="{Binding Source={x:Reference Self}, Path=IsPrevAvailable}"/>

            <Label Grid.Column="1" Text="{Binding Source={x:Reference Self}, Path=CurrentItem.Name}" VerticalOptions="Start" HorizontalOptions="Center" FontSize="25"
                            TextColor="{AppThemeBinding Light=Black,Dark=White}" HorizontalTextAlignment="Center"/>

            <ImageButton Source="arrow_left.png" Grid.Column="2" BackgroundColor="Transparent" Command="{Binding Source={x:Reference Self}, Path=NextCommand}"
                    WidthRequest="20" HeightRequest="20" VerticalOptions="Start" IsVisible="{Binding Source={x:Reference Self}, Path=IsNextAvailable}">
            </ImageButton>
        </Grid>

        <ScrollView Grid.Row="1" Orientation="Vertical">
            <VerticalStackLayout BindingContext="{Binding Source={x:Reference Self}, Path=CurrentItem}" Spacing="5">
                <Border Padding="5" BackgroundColor="White" HorizontalOptions="Center" VerticalOptions="Center" 
                    Stroke="Transparent" Margin="5,0">
                    <controls:ImageCache x:Name="ImageControl" HeightRequest="200" CodeNum="{Binding CodeNum}" WidthRequest="200"/>
                </Border>
                <StackLayout Spacing="0">
                    <Border StrokeShape="RoundRectangle 20" Padding="10" HorizontalOptions="Center" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByReps}}"
                           BackgroundColor="{AppThemeBinding Light={StaticResource ListItemBackgroundColorLight}, Dark={StaticResource ListItemBackgroundColor}}">
                        <CollectionView HorizontalOptions="Center" ItemsSource="{Binding WeightAndRepsItems}" HeightRequest="90" VerticalOptions="Center">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout Orientation="Horizontal" ItemSpacing="5"/>
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid RowDefinitions="auto,45" RowSpacing="2">
                                        <Border BackgroundColor="{AppThemeBinding Light={StaticResource ContentPageBackgroundColorLight}, Dark={StaticResource ContentPageBackgroundColor}}"/>
                                        <Entry Margin="0" FontSize="Medium" Keyboard="Numeric" MaxLength="3" Text="{Binding Repetitions, Mode=TwoWay}" MinimumWidthRequest="70" HorizontalTextAlignment="Center" />

                                        <Border Grid.Row="1" Stroke="Transparent" StrokeShape="RoundRectangle 20" HeightRequest="40" WidthRequest="40"
                                                VerticalOptions="Center" HorizontalOptions="Center" >
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="Border" Value="True">
                                                            <Setter Property="Background" Value="Green" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="Border" Value="False">
                                                            <Setter Property="Background" Value="Transparent" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>

                                        <ImageButton Grid.Row="1" Margin="0" Command="{Binding ChangeFinishedCommand}" HeightRequest="35" HorizontalOptions="Center" CornerRadius="17" Background="Transparent"
                                            IsVisible="{Binding Source={x:Static Application.Current}, Path=IsTrainingNotFinished}" Source="save" VerticalOptions="Center" WidthRequest="35">
                                            <ImageButton.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="LightGray" />
                                            </ImageButton.Behaviors>
                                        </ImageButton>
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </Border>

					<Border StrokeShape="RoundRectangle 20" Padding="10" HorizontalOptions="Center" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByRepsAndWeight}}"
                           BackgroundColor="{AppThemeBinding Light={StaticResource ListItemBackgroundColorLight}, Dark={StaticResource ListItemBackgroundColor}}">
                        <CollectionView HorizontalOptions="Center" ItemsSource="{Binding WeightAndRepsItems}" HeightRequest="140" VerticalOptions="Center">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout Orientation="Horizontal" ItemSpacing="5"/>
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid RowDefinitions="auto,auto,auto" RowSpacing="2" VerticalOptions="Center">
                                        <Border BackgroundColor="{AppThemeBinding Light={StaticResource ContentPageBackgroundColorLight}, Dark={StaticResource ContentPageBackgroundColor}}"/>
                                        <Border Grid.Row="2" BackgroundColor="{AppThemeBinding Light={StaticResource ContentPageBackgroundColorLight}, Dark={StaticResource ContentPageBackgroundColor}}"/>
                                        <Entry Margin="0" FontSize="Medium" Keyboard="Numeric" MaxLength="3" Text="{Binding Repetitions, Mode=TwoWay}" HorizontalTextAlignment="Center" MinimumWidthRequest="70"/>
                                        <ImageButton Grid.Row="1" Margin="0" Command="{Binding ChangeFinishedCommand}" HeightRequest="35" HorizontalOptions="Center" CornerRadius="17"
                                            IsVisible="{Binding Source={x:Static Application.Current}, Path=IsTrainingNotFinished}" Source="save" VerticalOptions="Fill" WidthRequest="35">
                                            <ImageButton.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="LightGray" />
                                            </ImageButton.Behaviors>
                                            <ImageButton.Style>
                                                <Style TargetType="ImageButton">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="ImageButton" Value="True">
                                                            <Setter Property="BackgroundColor" Value="Green" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="ImageButton" Value="False">
                                                            <Setter Property="BackgroundColor" Value="Transparent" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ImageButton.Style>
                                        </ImageButton>
                                        <Entry Grid.Row="2" Margin="0" FontSize="Medium" IsVisible="{Binding Source={x:Reference Self}, Path=IsOnlyReps, Converter={StaticResource InverseBooleanConverter}}"
                                        MaxLength="4" Text="{Binding WeightString, Mode=TwoWay}" MinimumWidthRequest="70" HorizontalTextAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </Border>
                    
                    <Border Style="{StaticResource MaterialBorder}" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByTime}}" Margin="0,5">
                        <Grid RowDefinitions="auto,*">
                            <Grid ColumnDefinitions="*,auto">
                                <Label Text="{x:Static resx:AppResources.TimeString}" TextColor="{StaticResource Main}" HorizontalOptions="Center" VerticalOptions="Center"/>
                                <Button Grid.Column="1" Clicked="StartCalculateTime_Clicked" CornerRadius="20" VerticalOptions="Start" BackgroundColor="Transparent" TextColor="{AppThemeBinding Dark=White, Light=Black}" FontAttributes="Bold">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Text" Value="{x:Static resx:AppResources.MakeTrainingString}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsTimeCalculating}" TargetType="Button" Value="True">
                                                    <Setter Property="Text" Value="{x:Static resx:AppResources.StopString}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                            <syncfusion:SfTimePicker SelectedTime="{Binding Time, Mode=TwoWay}" Format="HH_mm_ss" Grid.Row="1" HeightRequest="120" BackgroundColor="Transparent" HorizontalOptions="Center">
                                <syncfusion:SfTimePicker.ColumnHeaderTemplate>
                                    <DataTemplate>
                                        <Grid BackgroundColor="Transparent" ColumnDefinitions="*,*,*">
                                            <Label Text="{x:Static resx:AppResources.Hours}" Grid.Column="0" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
                                            <Label Text="{x:Static resx:AppResources.Minutes}" Grid.Column="1" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
                                            <Label Text="{x:Static resx:AppResources.Seconds}" Grid.Column="2" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </syncfusion:SfTimePicker.ColumnHeaderTemplate>
                                <syncfusion:SfTimePicker.ColumnHeaderView >
                                    <syncfusion:TimePickerColumnHeaderView DividerColor="Transparent" />
                                </syncfusion:SfTimePicker.ColumnHeaderView> 
                            </syncfusion:SfTimePicker>
                        </Grid>
                    </Border>
                </StackLayout>

                <StackLayout x:Name="DescriptionGrid" Margin="0">
                    <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.StartPosition}" TextColor="DodgerBlue" VerticalTextAlignment="Center" 
IsVisible="{Binding Description.StartPosition, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                    <Label FontSize="Small" Text="{Binding Description.StartPosition}" 
IsVisible="{Binding Description.StartPosition, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                    <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Execution}" TextColor="LimeGreen" VerticalTextAlignment="Center" 
IsVisible="{Binding Description.Execution, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                    <Label FontSize="Small" Text="{Binding Description.Execution}" 
IsVisible="{Binding Description.Execution, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                    <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Advice}" TextColor="Orange" VerticalTextAlignment="Center" 
IsVisible="{Binding Description.Advice, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                    <Label FontSize="Small" Text="{Binding Description.Advice}" 
IsVisible="{Binding Description.Advice, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                </StackLayout>
            </VerticalStackLayout>
        </ScrollView>
    </Grid>
</ContentView>

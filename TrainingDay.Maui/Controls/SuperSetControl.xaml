<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:TrainingDay.Maui.Controls"
            xmlns:resx="clr-namespace:TrainingDay.Maui.Resources.Strings"
            xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:data="clr-namespace:TrainingDay.Common;assembly=TrainingDay.Common"
             x:Class="TrainingDay.Maui.Controls.SuperSetControl"
             x:Name="Self">
    <Grid RowDefinitions="auto,*">
        <CollectionView ItemsSource="{Binding Source={x:Reference Self}, Path=SuperSetItems}" Margin="5,0" SelectionMode="Single"
                        SelectedItem="{Binding Source={x:Reference Self}, Path=CurrentItem,Mode=TwoWay}">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Grid ColumnDefinitions="70,*" ColumnSpacing="10" Margin="5">
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                        </Grid.GestureRecognizers>

                        <Frame Grid.Column="0" Padding="5" BackgroundColor="White" CornerRadius="5" HorizontalOptions="Center" VerticalOptions="Center" BorderColor="Transparent">
                            <controls:ImageCache x:Name="ImageControl" HeightRequest="60" CodeNum="{Binding CodeNum}" WidthRequest="60"/>
                        </Frame>

                        <Label Grid.Column="1" Text="{Binding ExerciseItemName}" VerticalOptions="Center" HorizontalOptions="Start"/>
                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <ScrollView Grid.Row="1" Orientation="Vertical">
            <VerticalStackLayout BindingContext="{Binding Source={x:Reference Self}, Path=CurrentItem}" Spacing="5">
                <StackLayout Spacing="0">
                    <StackLayout Padding="0" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByReps}}"
                 Orientation="Vertical">
                        <StackLayout Orientation="Horizontal" VerticalOptions="Start" Spacing="10">
                            <Label FontAttributes="Bold" FontSize="Medium" HorizontalOptions="Start" Text="{x:Static resx:AppResources.RepsString}" VerticalTextAlignment="Center" />

                            <ImageButton WidthRequest="40" HeightRequest="40" Padding="0" Source="add" Clicked="AddWeightAndRepsItem_Clicked" BackgroundColor="Transparent">
                                <ImageButton.Behaviors>
                                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light=Gray, Dark=White}" />
                                </ImageButton.Behaviors>
                            </ImageButton>
                        </StackLayout>

                        <FlexLayout x:Name="RepsItemsFlexLayout" AlignContent="Start" AlignItems="Center" BindableLayout.ItemsSource="{Binding WeightAndRepsItems}"
                Direction="Row" JustifyContent="Start" VerticalOptions="Start" Wrap="Wrap">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <controls:RepsAndWeightControl Margin="0" IsOnlyReps="True" Padding="0"
                            DeleteRequestCommand="{Binding Source={x:Reference Self}, Path=DeleteRequestCommand}"
                            HorizontalOptions="Start" VerticalOptions="Start" Value="{Binding}" 
                            WidthRequest="{Binding Source={RelativeSource AncestorType={x:Type FlexLayout}}, Path=Width, Converter={StaticResource HalfValueConverter}, ConverterParameter=2}"/>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </FlexLayout>
                    </StackLayout>

                    <StackLayout Padding="0" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByRepsAndWeight}}"
    Orientation="Vertical">
                        <StackLayout Orientation="Horizontal" VerticalOptions="Start" Spacing="10">
                            <Label FontAttributes="Bold" FontSize="Medium" HorizontalOptions="Start" Text="{x:Static resx:AppResources.RepsAndWeightString}" VerticalTextAlignment="Center" />
                            <ImageButton WidthRequest="40" HeightRequest="40" Padding="0" Source="add" Clicked="AddWeightAndRepsItem_Clicked" BackgroundColor="Transparent">
                                <ImageButton.Behaviors>
                                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light=Gray, Dark=White}" />
                                </ImageButton.Behaviors>
                            </ImageButton>
                        </StackLayout>

                        <FlexLayout x:Name="WeightAndRepsItemsFlexLayout" AlignContent="Start" AlignItems="Center" BindableLayout.ItemsSource="{Binding WeightAndRepsItems}"
                Direction="Row" JustifyContent="Start" VerticalOptions="Start" Wrap="Wrap">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <controls:RepsAndWeightControl Margin="0"
                        Padding="0"
                        DeleteRequestCommand="{Binding Source={x:Reference Self}, Path=DeleteRequestCommand}"
                        HorizontalOptions="Start"
                        VerticalOptions="Start"
                        WidthRequest="{Binding Source={RelativeSource AncestorType={x:Type FlexLayout}}, Path=Width, Converter={StaticResource HalfValueConverter}, ConverterParameter=2}"
                        Value="{Binding}" />
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </FlexLayout>
                    </StackLayout>

                    <StackLayout Margin="0" Padding="0" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByTime}}"
             Orientation="Horizontal" Spacing="0">
                        <Label Margin="0" FontAttributes="Bold" FontSize="Medium" HorizontalOptions="StartAndExpand" Text="{x:Static resx:AppResources.TimeString}" VerticalOptions="Center" />
                        <Grid HorizontalOptions="Start">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Label
            x:Name="HourPicker"
            Grid.Row="0"
            Grid.Column="0"
            FontSize="Medium"
            HorizontalOptions="Center"
            HorizontalTextAlignment="Center"
            Text="{Binding TimeHours, StringFormat='{0:D2}'}"
            WidthRequest="50">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="HourGestureRecognizer_OnTapped" />
                                </Label.GestureRecognizers>
                            </Label>

                            <Label
            Grid.Row="1"
            Grid.Column="0"
            Padding="0"
            HorizontalOptions="Fill"
            HorizontalTextAlignment="Center"
            Text="{x:Static resx:AppResources.HourString}"
            VerticalTextAlignment="Center" />
                        </Grid>

                        <Label
        Padding="0"
        FontSize="Medium"
        HorizontalOptions="Start"
        HorizontalTextAlignment="Center"
        Text=":"
        VerticalTextAlignment="Center" />
                        <Grid HorizontalOptions="Start">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label
            x:Name="MinutesPicker"
            Grid.Row="0"
            FontSize="Medium"
            HorizontalOptions="Center"
            HorizontalTextAlignment="Center"
            Text="{Binding TimeMinutes, StringFormat='{0:D2}'}"
            WidthRequest="50">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="MinuteGestureRecognizer_OnTapped" />
                                </Label.GestureRecognizers>
                            </Label>

                            <Label
            Grid.Row="1"
            Padding="0"
            HorizontalOptions="Fill"
            HorizontalTextAlignment="Center"
            Text="{x:Static resx:AppResources.MinuteString}"
            VerticalTextAlignment="Center" />
                        </Grid>

                        <Label
        Padding="0"
        FontSize="Medium"
        HorizontalOptions="Start"
        HorizontalTextAlignment="Center"
        Text=":"
        VerticalTextAlignment="Center" />
                        <Grid HorizontalOptions="Start">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label
            x:Name="SecondsPicker"
            Grid.Row="0"
            FontSize="Medium"
            HorizontalOptions="Center"
            HorizontalTextAlignment="Center"
            Text="{Binding TimeSeconds, StringFormat='{0:D2}'}"
            WidthRequest="50">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="SecondGestureRecognizer_OnTapped" />
                                </Label.GestureRecognizers>
                            </Label>
                            <Label
            Grid.Row="1"
            Padding="0"
            HorizontalOptions="Fill"
            HorizontalTextAlignment="Center"
            Text="{x:Static resx:AppResources.SecondString}"
            VerticalTextAlignment="Center" />
                        </Grid>
                        <Button Clicked="StartCalculateTime_Clicked" IsVisible="{Binding IsNotFinished}" CornerRadius="20">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Text" Value="{x:Static resx:AppResources.MakeTrainingString}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsTimeCalculating}" TargetType="Button" Value="True">
                                            <Setter Property="Text" Value="{x:Static resx:AppResources.StopString}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackLayout>

                    <StackLayout Margin="0" Padding="0" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByDistance}}"
    Orientation="Horizontal">
                        <Label Margin="0" FontAttributes="Bold" FontSize="Medium" Text="{x:Static resx:AppResources.DistanceString}" VerticalOptions="Center" />
                        <Entry HorizontalOptions="Start" HorizontalTextAlignment="Center" Text="{Binding DistanceString}" WidthRequest="50" />
                    </StackLayout>
                </StackLayout>

                <VerticalStackLayout>
                    <Grid ColumnDefinitions="*,*">
                        <Label x:Name="DesctiptionLabel" Padding="10" Grid.ColumnSpan="2" BackgroundColor="Green" Text="{x:Static resx:AppResources.ShortDescriptionString1}"
               HorizontalTextAlignment="Center"/>

                    </Grid>

                    <StackLayout x:Name="DescriptionGrid" Margin="5">
                        <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.StartPosition}" TextColor="DodgerBlue" VerticalTextAlignment="Center" 
           IsVisible="{Binding Description.StartPosition, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                        <Label FontSize="Small" Text="{Binding Description.StartPosition}" 
           IsVisible="{Binding Description.StartPosition, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                        <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Execution}" TextColor="LimeGreen" VerticalTextAlignment="Center" 
           IsVisible="{Binding Description.Execution, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                        <Label FontSize="Small" Text="{Binding Description.Execution}" 
           IsVisible="{Binding Description.Execution, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                        <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Advice}" TextColor="Orange" VerticalTextAlignment="Center" 
           IsVisible="{Binding Description.Advice, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                        <Label FontSize="Small" Text="{Binding Description.Advice}" 
           IsVisible="{Binding Description.Advice, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                    </StackLayout>
                </VerticalStackLayout>
            </VerticalStackLayout>

        </ScrollView>
    </Grid>
</ContentView>

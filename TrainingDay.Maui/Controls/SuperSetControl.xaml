<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:TrainingDay.Maui.Controls"
             xmlns:resx="clr-namespace:TrainingDay.Maui.Resources.Strings"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:data="clr-namespace:TrainingDay.Common;assembly=TrainingDay.Common"
             x:Class="TrainingDay.Maui.Controls.SuperSetControl"
             x:Name="Self">
    <Grid x:Name="mainGrid" RowDefinitions="auto,*" RowSpacing="5">
        <CollectionView ItemsSource="{Binding Source={x:Reference Self}, Path=SuperSetItems}" Margin="5,0" SelectionMode="Single"
                        SelectedItem="{Binding Source={x:Reference Self}, Path=CurrentItem, Mode=TwoWay}">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Grid ColumnDefinitions="70,*" ColumnSpacing="10" Margin="5">
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                        </Grid.GestureRecognizers>

                        <Frame Grid.Column="0" Padding="5" BackgroundColor="White" CornerRadius="5" HorizontalOptions="Center" VerticalOptions="Center" BorderColor="Transparent">
                            <controls:ImageCache x:Name="ImageControl" HeightRequest="60" CodeNum="{Binding CodeNum}" WidthRequest="60"/>
                        </Frame>

                        <Label Grid.Column="1" Text="{Binding ExerciseItemName}" VerticalOptions="Center" HorizontalOptions="Start" FontSize="20"
                               TextColor="{AppThemeBinding Light=White,Dark=White}"/>
                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <ScrollView Grid.Row="1" Orientation="Vertical">
            <VerticalStackLayout BindingContext="{Binding Source={x:Reference Self}, Path=CurrentItem}" Spacing="5">
                <StackLayout Spacing="0">
                    <Frame CornerRadius="20" Padding="10" HorizontalOptions="Center" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByReps}}"
                           BackgroundColor="{AppThemeBinding Light={StaticResource ListItemBackgroundColorLight}, Dark={StaticResource ListItemBackgroundColor}}">
                        <CollectionView HorizontalOptions="Center" ItemsSource="{Binding WeightAndRepsItems}" HeightRequest="90" VerticalOptions="Center">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout Orientation="Horizontal" ItemSpacing="5"/>
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid RowDefinitions="auto,45" RowSpacing="2">
                                        <Frame BackgroundColor="{AppThemeBinding Light={StaticResource ContentPageBackgroundColorLight}, Dark={StaticResource ContentPageBackgroundColor}}"/>
                                        <Entry Margin="0" FontSize="Medium" Keyboard="Numeric" MaxLength="3" Text="{Binding Repetitions, Mode=TwoWay}" MinimumWidthRequest="50" HorizontalTextAlignment="Center" />
                                        <ImageButton Grid.Row="1" Margin="0" Command="{Binding ChangeFinishedCommand}" HeightRequest="35" HorizontalOptions="Center" CornerRadius="17"
                                            IsVisible="{Binding Source={x:Static Application.Current}, Path=IsTrainingNotFinished}" Source="save" VerticalOptions="Fill" WidthRequest="35">
                                            <ImageButton.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="White" />
                                            </ImageButton.Behaviors>
                                            <ImageButton.Style>
                                                <Style TargetType="ImageButton">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="ImageButton" Value="True">
                                                            <Setter Property="BackgroundColor" Value="Green" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="ImageButton" Value="False">
                                                            <Setter Property="BackgroundColor" Value="Transparent" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ImageButton.Style>
                                        </ImageButton>
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </Frame>

                    <Frame CornerRadius="20" Padding="10" HorizontalOptions="Center" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByRepsAndWeight}}"
                           BackgroundColor="{AppThemeBinding Light={StaticResource ListItemBackgroundColorLight}, Dark={StaticResource ListItemBackgroundColor}}">
                        <CollectionView HorizontalOptions="Center" ItemsSource="{Binding WeightAndRepsItems}" HeightRequest="140" VerticalOptions="Center">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout Orientation="Horizontal" ItemSpacing="5"/>
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid RowDefinitions="auto,auto,auto" RowSpacing="2" VerticalOptions="Center">
                                        <Frame BackgroundColor="{AppThemeBinding Light={StaticResource ContentPageBackgroundColorLight}, Dark={StaticResource ContentPageBackgroundColor}}"/>
                                        <Frame Grid.Row="2" BackgroundColor="{AppThemeBinding Light={StaticResource ContentPageBackgroundColorLight}, Dark={StaticResource ContentPageBackgroundColor}}"/>
                                        <Entry Margin="0" FontSize="Medium" Keyboard="Numeric" MaxLength="3" Text="{Binding Repetitions, Mode=TwoWay}" HorizontalTextAlignment="Center" MinimumWidthRequest="50"/>
                                        <ImageButton Grid.Row="1" Margin="0" Command="{Binding ChangeFinishedCommand}" HeightRequest="35" HorizontalOptions="Center" CornerRadius="17"
                                            IsVisible="{Binding Source={x:Static Application.Current}, Path=IsTrainingNotFinished}" Source="save" VerticalOptions="Fill" WidthRequest="35">
                                            <ImageButton.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="White" />
                                            </ImageButton.Behaviors>
                                            <ImageButton.Style>
                                                <Style TargetType="ImageButton">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="ImageButton" Value="True">
                                                            <Setter Property="BackgroundColor" Value="Green" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsFinished}" TargetType="ImageButton" Value="False">
                                                            <Setter Property="BackgroundColor" Value="Transparent" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ImageButton.Style>
                                        </ImageButton>
                                        <Entry Grid.Row="2" Margin="0" FontSize="Medium" IsVisible="{Binding Source={x:Reference Self}, Path=IsOnlyReps, Converter={StaticResource InverseBooleanConverter}}"
                                        MaxLength="4" Text="{Binding WeightString, Mode=TwoWay}" MinimumWidthRequest="50" HorizontalTextAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </Frame>
                    
                    <StackLayout Margin="0" Padding="0" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByTime}}"
             Orientation="Horizontal" Spacing="0">
                        <Label Margin="0" FontAttributes="Bold" FontSize="Medium" HorizontalOptions="StartAndExpand" Text="{x:Static resx:AppResources.TimeString}" VerticalOptions="Center" />
                        <Grid HorizontalOptions="Start">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Label
            x:Name="HourPicker"
            Grid.Row="0"
            Grid.Column="0"
            FontSize="Medium"
            HorizontalOptions="Center"
            HorizontalTextAlignment="Center"
            Text="{Binding TimeHours, StringFormat='{0:D2}'}"
            WidthRequest="50">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="HourGestureRecognizer_OnTapped" />
                                </Label.GestureRecognizers>
                            </Label>

                            <Label
            Grid.Row="1"
            Grid.Column="0"
            Padding="0"
            HorizontalOptions="Fill"
            HorizontalTextAlignment="Center"
            Text="{x:Static resx:AppResources.HourString}"
            VerticalTextAlignment="Center" />
                        </Grid>

                        <Label
        Padding="0"
        FontSize="Medium"
        HorizontalOptions="Start"
        HorizontalTextAlignment="Center"
        Text=":"
        VerticalTextAlignment="Center" />
                        <Grid HorizontalOptions="Start">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label
            x:Name="MinutesPicker"
            Grid.Row="0"
            FontSize="Medium"
            HorizontalOptions="Center"
            HorizontalTextAlignment="Center"
            Text="{Binding TimeMinutes, StringFormat='{0:D2}'}"
            WidthRequest="50">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="MinuteGestureRecognizer_OnTapped" />
                                </Label.GestureRecognizers>
                            </Label>

                            <Label
            Grid.Row="1"
            Padding="0"
            HorizontalOptions="Fill"
            HorizontalTextAlignment="Center"
            Text="{x:Static resx:AppResources.MinuteString}"
            VerticalTextAlignment="Center" />
                        </Grid>

                        <Label
        Padding="0"
        FontSize="Medium"
        HorizontalOptions="Start"
        HorizontalTextAlignment="Center"
        Text=":"
        VerticalTextAlignment="Center" />
                        <Grid HorizontalOptions="Start">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label
            x:Name="SecondsPicker"
            Grid.Row="0"
            FontSize="Medium"
            HorizontalOptions="Center"
            HorizontalTextAlignment="Center"
            Text="{Binding TimeSeconds, StringFormat='{0:D2}'}"
            WidthRequest="50">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="SecondGestureRecognizer_OnTapped" />
                                </Label.GestureRecognizers>
                            </Label>
                            <Label
            Grid.Row="1"
            Padding="0"
            HorizontalOptions="Fill"
            HorizontalTextAlignment="Center"
            Text="{x:Static resx:AppResources.SecondString}"
            VerticalTextAlignment="Center" />
                        </Grid>
                        <Button Clicked="StartCalculateTime_Clicked" IsVisible="{Binding IsNotFinished}" CornerRadius="20">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Text" Value="{x:Static resx:AppResources.MakeTrainingString}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsTimeCalculating}" TargetType="Button" Value="True">
                                            <Setter Property="Text" Value="{x:Static resx:AppResources.StopString}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackLayout>

                    <StackLayout Margin="0" Padding="0" IsVisible="{Binding Tags, Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByDistance}}"
    Orientation="Horizontal">
                        <Label Margin="0" FontAttributes="Bold" FontSize="Medium" Text="{x:Static resx:AppResources.DistanceString}" VerticalOptions="Center" />
                        <Entry HorizontalOptions="Start" HorizontalTextAlignment="Center" Text="{Binding DistanceString}" WidthRequest="50" />
                    </StackLayout>
                </StackLayout>

                <StackLayout x:Name="DescriptionGrid" Margin="0">
                    <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.StartPosition}" TextColor="DodgerBlue" VerticalTextAlignment="Center" 
IsVisible="{Binding Description.StartPosition, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                    <Label FontSize="Small" Text="{Binding Description.StartPosition}" 
IsVisible="{Binding Description.StartPosition, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                    <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Execution}" TextColor="LimeGreen" VerticalTextAlignment="Center" 
IsVisible="{Binding Description.Execution, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                    <Label FontSize="Small" Text="{Binding Description.Execution}" 
IsVisible="{Binding Description.Execution, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                    <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Advice}" TextColor="Orange" VerticalTextAlignment="Center" 
IsVisible="{Binding Description.Advice, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>

                    <Label FontSize="Small" Text="{Binding Description.Advice}" 
IsVisible="{Binding Description.Advice, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                </StackLayout>
            </VerticalStackLayout>

        </ScrollView>
    </Grid>
</ContentView>

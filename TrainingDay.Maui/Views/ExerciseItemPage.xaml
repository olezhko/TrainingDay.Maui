<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:TrainingDay.Maui.ViewModels"
             xmlns:controls="clr-namespace:TrainingDay.Maui.Controls"
             xmlns:resx="clr-namespace:TrainingDay.Maui.Resources.Strings"
             xmlns:data="clr-namespace:TrainingDay.Common.Models;assembly=TrainingDay.Common"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="TrainingDay.Maui.Views.ExerciseItemPage"
             Shell.TabBarIsVisible="False"
             Padding="5">
    <Shell.TitleView>
        <Grid ColumnDefinitions="*,auto, auto" Padding="10,0" ColumnSpacing="10">
            <Label x:Name="TitleLabel" Grid.Column="0" Text="{x:Static resx:AppResources.CreateNewString}" FontSize="Medium" VerticalOptions="Center" FontAttributes="Bold"/>

            <ImageButton Grid.Column="1" WidthRequest="30" HeightRequest="30" Source="save.png" Clicked="Save_clicked">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource PrimaryDarkColor}, Dark=White}" />
                </ImageButton.Behaviors>
            </ImageButton>

            <ImageButton x:Name="DeleteExerciseToolbarItem" Grid.Column="2" WidthRequest="30" HeightRequest="30" Source="remove.png" Clicked="Remove_clicked">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource PrimaryDarkColor}, Dark=White}" />
                </ImageButton.Behaviors>
            </ImageButton>
        </Grid>
    </Shell.TitleView>
    <ContentPage.BindingContext>
        <viewModels:ExerciseViewModel />
    </ContentPage.BindingContext>
    <Grid>
        <ScrollView>
            <Grid x:Name="ContentGrid" RowDefinitions="auto,auto,auto,auto,auto" RowSpacing="10">

                <Frame Grid.Row="0" Style="{StaticResource MaterialFrame}" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}">
                    <Grid>
                        <Label Text="{x:Static resx:AppResources.NameString}" Style="{StaticResource MaterialLabel}"/>
                        <Entry x:Name="NameEditor" FontSize="22" IsReadOnly="{Binding IsBase}" 
                            Keyboard="Text" Text="{Binding Name}" VerticalOptions="End"/>
                    </Grid>
                </Frame>

                <Label
            x:Name="NameLabel"
            Grid.Row="0"
            FontSize="Large"
            IsVisible="{Binding IsBase}"
            Text="{Binding Name}"
            VerticalOptions="Start" />

                <Frame
            Grid.Row="1"
            Padding="0"
            BorderColor="Black"
            CornerRadius="2"
            HeightRequest="120"
            HorizontalOptions="Center"
            WidthRequest="120">
                    <controls:ImageCache CodeNum="{Binding CodeNum, Mode=TwoWay}" />
                </Frame>

                <StackLayout Grid.Row="2">
                    <Button CornerRadius="20" Text="{x:Static resx:AppResources.SelectMusclesString}" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}" 
                        HorizontalOptions="Fill" Clicked="ShowMusclesLookup_Click"/>
                    <StackLayout>
                        <FlexLayout BindableLayout.ItemsSource="{Binding Muscles}" HorizontalOptions="Center" Wrap="Wrap" VerticalOptions="Center" Direction="Row"
                                                    JustifyContent="Center" AlignItems="Center" AlignContent="Start">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Frame Margin="1" Style="{StaticResource MuscleFrameCellStyle}">
                                        <Label FontSize="14" Text="{Binding Name}" TextColor="White" LineBreakMode="TailTruncation" />
                                    </Frame>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </FlexLayout>
                    </StackLayout>
                </StackLayout>

                <StackLayout Grid.Row="3" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}">
                    <RadioButton x:Name="ExerciseByRepsCheckBox" GroupName="ExerciseType" BackgroundColor="Transparent"
                             IsChecked="{Binding Tags,Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByReps}, Mode=OneWay}"
                             IsEnabled="{Binding IsBase,Converter={StaticResource InverseBooleanConverter}}"/>
                    <RadioButton x:Name="ExerciseByRepsAndWeightCheckBox" GroupName="ExerciseType" BackgroundColor="Transparent"
                             IsChecked="{Binding Tags,Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByRepsAndWeight}, Mode=OneWay}"
                             IsEnabled="{Binding IsBase,Converter={StaticResource InverseBooleanConverter}}"/>
                    <RadioButton x:Name="ExerciseByTimeCheckBox" GroupName="ExerciseType" BackgroundColor="Transparent"
                             IsChecked="{Binding Tags,Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByTime}, Mode=OneWay}"
                             IsEnabled="{Binding IsBase,Converter={StaticResource InverseBooleanConverter}}"/>
                    <RadioButton x:Name="ExerciseByDistanceCheckBox" GroupName="ExerciseType" BackgroundColor="Transparent"
                             IsChecked="{Binding Tags,Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByDistance}, Mode=OneWay}"
                             IsEnabled="{Binding IsBase,Converter={StaticResource InverseBooleanConverter}}"/>
                </StackLayout>

                <Grid Grid.Row="4" RowDefinitions="auto,auto,auto" RowSpacing="5">
                    <Editor
                        x:Name="StartingDescEditor"
                        Grid.Row="0"
                        AutoSize="TextChanges"
                        FontSize="Small"
                        IsReadOnly="{Binding IsBase}"
                        IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}"
                        Placeholder="{x:Static resx:AppResources.StartPosition}"
                        BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}"
                        Text="{Binding Description.StartPosition}" />
                    <Label
                Grid.Row="0"
                FontSize="Small"
                IsVisible="{Binding Source={x:Reference StartingDescEditor}, Path=IsReadOnly}"
                Text="{Binding Description.StartPosition}" />

                    <Editor
                x:Name="ExecDescEditor"
                Grid.Row="1"
                AutoSize="TextChanges"
                FontSize="Small"
                IsReadOnly="{Binding IsBase}"
                IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}"
                Placeholder="{x:Static resx:AppResources.Execution}"
                        BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}"
                Text="{Binding Description.Execution}" />
                    <Label
                Grid.Row="1"
                FontSize="Small"
                IsVisible="{Binding Source={x:Reference ExecDescEditor}, Path=IsReadOnly}"
                Text="{Binding Description.Execution}" />

                    <Editor
                        
                x:Name="AdviceDescEditor"
                Grid.Row="2"
                AutoSize="TextChanges"
                FontSize="Small"
                IsReadOnly="{Binding IsBase}"
                IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}"
                Placeholder="{x:Static resx:AppResources.Advice}"
                        BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}"
                Text="{Binding Description.Advice}" />
                    <Label
                Grid.Row="2"
                FontSize="Small"
                IsVisible="{Binding Source={x:Reference AdviceDescEditor}, Path=IsReadOnly}"
                Text="{Binding Description.Advice}" />
                </Grid>
            </Grid>
        </ScrollView>

        <Grid x:Name="MuscleSelectorView" IsVisible="False" Padding="20" HorizontalOptions="Fill" VerticalOptions="Fill"
                     BackgroundColor="{AppThemeBinding Light='#77E3E3E3', Dark='#77000000'}">
            <Grid BackgroundColor="{AppThemeBinding Light=LightGray, Dark=Black}" Padding="20" RowSpacing="10" VerticalOptions="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="500"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label TextColor="Orange" FontSize="Large" Text="{x:Static resx:AppResources.SelectMusclesString}"/>

                <CollectionView Grid.Row="1" x:Name="MuscleSelectorList" VerticalOptions="Fill">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <StackLayout Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding IsChecked}" />
                                <Label Text="{Binding Text}" VerticalOptions="Center" VerticalTextAlignment="Center" />
                            </StackLayout>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>

                <Grid Grid.Row="2" VerticalOptions="End" ColumnDefinitions="*,*" ColumnSpacing="10">
                    <Button CornerRadius="20" Text="{x:Static resx:AppResources.CancelString}" Clicked="MuscleSelectorViewCancel_OnClicked" BackgroundColor="Transparent" BorderWidth="1"/>
                    <Button CornerRadius="20" Grid.Column="1" Text="{x:Static resx:AppResources.SelectString}" Clicked="MuscleSelectorViewApprove_OnClicked" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</ContentPage>
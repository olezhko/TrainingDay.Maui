<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:TrainingDay.Maui.ViewModels"
             xmlns:controls="clr-namespace:TrainingDay.Maui.Controls"
             xmlns:resx="clr-namespace:TrainingDay.Maui.Resources.Strings"
             xmlns:data="clr-namespace:TrainingDay.Common.Models;assembly=TrainingDay.Common"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="TrainingDay.Maui.Views.ExerciseItemPage"
             Shell.TabBarIsVisible="False"
             Padding="5">
    <Shell.TitleView>
        <Grid ColumnDefinitions="*,auto, auto" Padding="10,0" ColumnSpacing="10">
            <Label x:Name="TitleLabel" Grid.Column="0" Text="{x:Static resx:AppResources.CreateNewString}" FontSize="Medium" VerticalOptions="Center" FontAttributes="Bold"/>

            <ImageButton Grid.Column="1" WidthRequest="30" HeightRequest="30" Source="save.png" Clicked="Save_clicked">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light=Black, Dark=White}" />
                </ImageButton.Behaviors>
            </ImageButton>

            <ImageButton x:Name="DeleteExerciseToolbarItem" Grid.Column="2" WidthRequest="30" HeightRequest="30" Source="remove.png" Clicked="Remove_clicked">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light=Black, Dark=White}" />
                </ImageButton.Behaviors>
            </ImageButton>
        </Grid>
    </Shell.TitleView>
    <ContentPage.BindingContext>
        <viewModels:ExerciseViewModel />
    </ContentPage.BindingContext>
    <Grid>
        <ScrollView>
            <Grid x:Name="ContentGrid" RowDefinitions="auto,auto,auto,auto,auto,auto" RowSpacing="0">
                <Border Grid.Row="0" Style="{StaticResource MaterialBorder}" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}">
                    <Grid>
                        <Label Text="{x:Static resx:AppResources.NameString}" Style="{StaticResource MaterialLabel}"/>
                        <Entry x:Name="NameEditor" FontSize="22" IsReadOnly="{Binding IsBase}" 
                            Keyboard="Text" Text="{Binding Name}" VerticalOptions="End"/>
                    </Grid>
                </Border>

                <Label
                    x:Name="NameLabel"
                    Grid.Row="0"
                    FontSize="Large"
                    IsVisible="{Binding IsBase}"
                    Text="{Binding Name}" HorizontalTextAlignment="Center"
                    VerticalOptions="Start" />

                <Grid Grid.Row="1" ColumnDefinitions="*, auto">
                    <Border Grid.ColumnSpan="2"
                        Padding="0"
                        HeightRequest="120"
                        HorizontalOptions="Center"
                        WidthRequest="120">
                        <controls:ImageCache CodeNum="{Binding CodeNum, Mode=TwoWay}" />
                    </Border>

                    <Grid Grid.Column="1" RowDefinitions="auto,auto" HorizontalOptions="End">
                        <Label Text="{x:Static resx:AppResources.Difficulty}" VerticalOptions="Center" HorizontalOptions="Center"/>
                        <toolkit:RatingView HorizontalOptions="Center" Grid.Row="1"
                                            VerticalOptions="End"
                                            EmptyShapeColor="Transparent"
                                            FillColor="{StaticResource Main}"
                                            FillOption ="Shape"
                                            IsReadOnly="True"
                                            ShapePadding="1,2,2,1"
                                            ShapeDiameter="25"
                                            MaximumRating="3"
                                            Rating="{Binding DifficultType}"
                                            Shape="Star"
                                            ShapeBorderColor="{AppThemeBinding Dark={StaticResource White}, Light={StaticResource Black}}"
                                            ShapeBorderThickness="0.3"
                                            Spacing="1" />
                    </Grid>
                </Grid>

                <StackLayout Grid.Row="2">
                    <Button CornerRadius="20" Text="{x:Static resx:AppResources.SelectMusclesString}" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}" 
                        HorizontalOptions="Fill" Clicked="ShowMusclesLookup_Click"/>
                    <StackLayout>
                        <FlexLayout BindableLayout.ItemsSource="{Binding Muscles}" Style="{StaticResource MuscleFlexStyle}">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Border Margin="1" Style="{StaticResource MuscleBorderCellStyle}">
                                        <Label FontSize="14" Text="{Binding Name}" TextColor="White" LineBreakMode="TailTruncation" />
                                    </Border>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </FlexLayout>
                    </StackLayout>
                </StackLayout>

                <StackLayout Grid.Row="3" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}">
                    <RadioButton x:Name="ExerciseByRepsCheckBox" GroupName="ExerciseType" BackgroundColor="Transparent"
                             IsChecked="{Binding Tags,Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByReps}, Mode=OneWay}"
                             IsEnabled="{Binding IsBase,Converter={StaticResource InverseBooleanConverter}}"/>
                    <RadioButton x:Name="ExerciseByRepsAndWeightCheckBox" GroupName="ExerciseType" BackgroundColor="Transparent"
                             IsChecked="{Binding Tags,Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByRepsAndWeight}, Mode=OneWay}"
                             IsEnabled="{Binding IsBase,Converter={StaticResource InverseBooleanConverter}}"/>
                    <RadioButton x:Name="ExerciseByTimeCheckBox" GroupName="ExerciseType" BackgroundColor="Transparent"
                             IsChecked="{Binding Tags,Converter={StaticResource ExerciseTagExistsConverter}, ConverterParameter={x:Static data:ExerciseTags.ExerciseByTime}, Mode=OneWay}"
                             IsEnabled="{Binding IsBase,Converter={StaticResource InverseBooleanConverter}}"/>
                </StackLayout>

                <Grid Grid.Row="4" RowDefinitions="auto,auto,auto">
                    <VerticalStackLayout Grid.Row="0">
                        <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.StartPosition}" TextColor="DodgerBlue" VerticalTextAlignment="Center" 
                           IsVisible="{Binding Description.StartPosition, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                        <Editor
                            x:Name="StartingDescEditor"
                            AutoSize="TextChanges"
                            FontSize="Small"
                            IsReadOnly="{Binding IsBase}"
                            IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}"
                            Placeholder="{x:Static resx:AppResources.StartPosition}"
                            BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}"
                            Text="{Binding Description.StartPosition}" />
                        <Label FontSize="Small" IsVisible="{Binding Source={x:Reference StartingDescEditor}, Path=IsReadOnly}" Text="{Binding Description.StartPosition}" />
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="1">
                        <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Execution}" TextColor="LimeGreen" VerticalTextAlignment="Center" 
                           IsVisible="{Binding Description.Execution, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                        <Editor x:Name="ExecDescEditor" AutoSize="TextChanges" FontSize="Small" IsReadOnly="{Binding IsBase}" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}" Placeholder="{x:Static resx:AppResources.Execution}"
                            BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}" Text="{Binding Description.Execution}" />
                        <Label FontSize="Small" IsVisible="{Binding Source={x:Reference ExecDescEditor}, Path=IsReadOnly}" Text="{Binding Description.Execution}" />
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="2">
                        <Label FontSize="Medium" HorizontalTextAlignment="Center" Text="{x:Static resx:AppResources.Advice}" TextColor="Orange" VerticalTextAlignment="Center" 
                           IsVisible="{Binding Description.Advice, Converter={StaticResource IsEmptyStringConverter},ConverterParameter='inverse'}"/>
                        <Editor x:Name="AdviceDescEditor" AutoSize="TextChanges" FontSize="Small" IsReadOnly="{Binding IsBase}" IsVisible="{Binding IsBase, Converter={StaticResource InverseBooleanConverter}}"
                            Placeholder="{x:Static resx:AppResources.Advice}" BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}" Text="{Binding Description.Advice}" />
                        <Label FontSize="Small" IsVisible="{Binding Source={x:Reference AdviceDescEditor}, Path=IsReadOnly}" Text="{Binding Description.Advice}" />
                    </VerticalStackLayout>
                </Grid>
            </Grid>
        </ScrollView>

        <Grid x:Name="MuscleSelectorView" IsVisible="False" Padding="20" HorizontalOptions="Fill" VerticalOptions="Fill"
                     BackgroundColor="{AppThemeBinding Light='#77E3E3E3', Dark='#77000000'}">
            <Grid BackgroundColor="{AppThemeBinding Light=LightGray, Dark=Black}" Padding="20" RowSpacing="10" VerticalOptions="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="500"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label TextColor="Orange" FontSize="Large" Text="{x:Static resx:AppResources.SelectMusclesString}"/>

                <CollectionView Grid.Row="1" x:Name="MuscleSelectorList" VerticalOptions="Fill">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <StackLayout Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding IsChecked}" />
                                <Label Text="{Binding Text}" VerticalOptions="Center" VerticalTextAlignment="Center" />
                            </StackLayout>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>

                <Grid Grid.Row="2" VerticalOptions="End" ColumnDefinitions="*,*" ColumnSpacing="10">
                    <Button CornerRadius="20" Text="{x:Static resx:AppResources.CancelString}" Clicked="MuscleSelectorViewCancel_OnClicked" BackgroundColor="Transparent" BorderWidth="1"/>
                    <Button CornerRadius="20" Grid.Column="1" Text="{x:Static resx:AppResources.SelectString}" Clicked="MuscleSelectorViewApprove_OnClicked" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</ContentPage>
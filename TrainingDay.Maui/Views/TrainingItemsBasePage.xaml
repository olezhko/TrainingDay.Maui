<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:TrainingDay.Maui.ViewModels.Pages"
             xmlns:controls="clr-namespace:TrainingDay.Maui.Controls"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:resx="clr-namespace:TrainingDay.Maui.Resources.Strings"
             xmlns:admob="clr-namespace:Plugin.AdMob;assembly=Plugin.AdMob"
             x:Class="TrainingDay.Maui.Views.TrainingItemsBasePage"
             x:Name="Page">
    <Shell.TitleView>
        <Grid ColumnDefinitions="*, auto, auto" ColumnSpacing="10" Margin="10,0">
            <Label Grid.Column="0" Text="{x:Static resx:AppResources.TrainingsBaseString}" FontSize="Title" VerticalOptions="Center" FontAttributes="Bold"/>

            <ImageButton Grid.Column="1" WidthRequest="30" HeightRequest="30" Source="train_hist.png" Clicked="ShowHistory_Click">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource PrimaryDarkColor}, Dark=White}" />
                </ImageButton.Behaviors>
            </ImageButton>
            <ImageButton Grid.Column="2" WidthRequest="30" HeightRequest="30" Source="add_empty.png" Command="{Binding AddNewTrainingCommand}">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource PrimaryDarkColor}, Dark=White}" />
                </ImageButton.Behaviors>
            </ImageButton>
        </Grid>
    </Shell.TitleView>
    <ContentPage.BindingContext>
        <viewModels:TrainingItemsBasePageViewModel/>
    </ContentPage.BindingContext>

    <controls:TooltipControlContainer x:Name="Container" BackgroundColor="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <CollectionView ItemsSource="{Binding ItemsGrouped}" VerticalOptions="Start" Margin="5" HeightRequest="50">
            <CollectionView.ItemsLayout>
                <LinearItemsLayout Orientation="Horizontal" ItemSpacing="5"/>
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Button Text="{Binding Key}" CornerRadius="25" HeightRequest="50" FontSize="Medium" Command="{Binding Source={x:Reference ItemsListView}, Path=BindingContext.SelectGroupCommand}"
                            CommandParameter="{Binding }" Margin="5" Padding="30,0">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="BackgroundColor" Value="{StaticResource Gray500}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True" TargetType="Button">
                                        <Setter Property="BackgroundColor" Value="{StaticResource Main}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <CollectionView x:Name="ItemsListView" Grid.Row="1" ItemsSource="{Binding SelectedTrainings}" BackgroundColor="Transparent" Margin="5,0">
            <CollectionView.ItemsLayout>
                <LinearItemsLayout Orientation="Vertical" ItemSpacing="5"/>
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="viewCell" Style="{StaticResource BorderCellStyle}" Padding="15" Margin="0" StrokeShape="RoundRectangle 25"
                            BackgroundColor="{AppThemeBinding Light={StaticResource ListItemBackgroundColorLight}, Dark={StaticResource ListItemBackgroundColor}}"
                           controls:LongPressedEffect.Command="{Binding Source={x:Reference ItemsListView}, Path=BindingContext.LongPressedEffectCommand}" 
                           controls:LongPressedEffect.CommandParameter="{Binding Source={x:Reference viewCell}}"
                           controls:LongPressedEffect.ClickCommand="{Binding Source={x:Reference ItemsListView}, Path=BindingContext.ItemSelectedCommand}">
                        <Border.Effects>
                            <controls:LongPressedEffect />
                        </Border.Effects>
                        <StackLayout>
                            <Label Text="{Binding Title}" FontSize="Medium" FontAttributes="Bold" VerticalOptions="Center" HorizontalTextAlignment="Center"/>
                            <Label Text="{Binding LastImplementedDateTime,StringFormat={x:Static resx:AppResources.LastImplementedFormatString}}" FontSize="13" VerticalOptions="Center" HorizontalTextAlignment="Center" TextColor="Gray"/>
                        </StackLayout>
                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>
            <CollectionView.EmptyView>
                <ContentView>
                    <ContentView.Style>
                        <Style TargetType="ContentView">
                            <Style.Triggers>
                                <DataTrigger TargetType="ContentView" Binding="{Binding ItemsGrouped.Count,Converter={StaticResource IsNoItemsConverter}}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="IsVisible" Value="True"/>
                        </Style>
                    </ContentView.Style>
                    <StackLayout HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
                        <Label Text="{x:Static resx:AppResources.NoTrainingsNeedAddNewString}" HorizontalTextAlignment="Center" FontSize="20"/>
                        <ImageButton WidthRequest="60" HeightRequest="60" Padding="0" HorizontalOptions="Center" VerticalOptions="Center" Source="add_empty.png"
                                     Command="{Binding AddNewTrainingCommand}" BackgroundColor="Transparent">
                            <ImageButton.Behaviors>
                                <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource PrimaryDarkColor}, Dark=White}" />
                            </ImageButton.Behaviors>
                        </ImageButton>
                    </StackLayout>
                </ContentView>
            </CollectionView.EmptyView>
        </CollectionView>

        <controls:ToolTipControl x:Name="ToolTipTapHoldTraining" Text="{x:Static resx:AppResources.ToolTipTapHoldTraining}" Title="{x:Static resx:AppResources.SettingsTrainingString}" 
                              NeverShow="{Binding Source={x:Static Application.Current},Path=ToolTipManager.ToolTipTapHoldTraining,Mode=TwoWay}" 
                              AttachedControl="ItemsListView" SkipText="{x:Static resx:AppResources.SkipString}" NeverShowText="{x:Static resx:AppResources.GotItString}" Position="Center"
                              ParentHeight="{Binding Source={x:Reference Container},Path=Height}" Grid.Row="1"
                              ParentWidth="{Binding Source={x:Reference Container},Path=Width}"/>

        <admob:BannerAd x:Name="AdMob" Grid.Row="2" AdSize="Banner" />
    </controls:TooltipControlContainer>
</ContentPage>